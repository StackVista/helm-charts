apiVersion: v1
kind: ConfigMap
metadata:
  name: hbase-configmap
  labels:
    app: {{ template "hbase.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  hbase-site.xml: |
    <configuration>
      <property>
        <name>hbase.master</name>
        <value>{{ template "hbase.name" . }}-hbase-master:16010</value>
      </property>
      <property>
        <name>zookeeper.znode.parent</name>
        <value>/hbase</value>
      </property>
      <property>
        <name>hbase.rootdir</name>
        <value>hdfs://{{ template "hbase.name" . }}-hdfs-nn:9000/hbase</value>
      </property>
      <property>
        <name>hbase.cluster.distributed</name>
        <value>true</value>
      </property>
      <property>
        <name>hbase.zookeeper.quorum</name>
        {{- if .Values.zookeeper.enabled }}
        {{- $replicaCount := int .Values.zookeeper.replicaCount }}
        {{- $followerPort := int .Values.zookeeper.service.followerPort }}
        {{- $electionPort := int .Values.zookeeper.service.electionPort }}
        {{- $releaseNamespace := .Release.Namespace }}
        {{- $zookeeperFullname := include "call-nested" (list . "zookeeper" "zookeeper.fullname") }}
        {{- $zookeeperHeadlessServiceName := printf "%s-%s" $zookeeperFullname "headless" | trunc 63  }}
        {{- $clusterDomain := .Values.zookeeper.clusterDomain }}
        <value>
        {{- range $i, $e := until $replicaCount -}}
          {{- $tempIndex := $e | add1 -}}
          {{ $zookeeperFullname }}-{{ $e }}.{{ $zookeeperHeadlessServiceName }}.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}{{ if ne $tempIndex $replicaCount }},{{ end }}
        {{- end -}}
        </value>
        {{- else }}
        <value>{{ .Values.hbase.zookeeper.quorum }}</value>
        {{- end }}
      </property>
    </configuration>

  bootstrap.sh: |
    #!/bin/bash

    : ${HADOOP_PREFIX:=/usr/local/hadoop}

    . $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh

    # Directory to find config artifacts
    CONFIG_DIR="/tmp/hbase-config"

    # Copy config files from volume mount

    for f in hbase-site.xml; do
      if [[ -e ${CONFIG_DIR}/$f ]]; then
        cp ${CONFIG_DIR}/$f /opt/hbase/conf/$f
      else
        echo "ERROR: Could not find $f in $CONFIG_DIR"
        exit 1
      fi
    done

    # installing libraries if any - (resource urls added comma separated to the ACP system variable)
    cd $HADOOP_PREFIX/share/hadoop/common ; for cp in ${ACP//,/ }; do  echo == $cp; curl -LO $cp ; done; cd -

    if [[ "${HOSTNAME}" =~ "hbase-master" ]]; then
      /opt/hbase/bin/hbase-daemon.sh --config /opt/hbase/conf start master
    fi

    if [[ "${HOSTNAME}" =~ "hbase-rs" ]]; then
      /opt/hbase/bin/hbase-daemon.sh --config /opt/hbase/conf start regionserver
    fi

    tail -f opt/hbase/logs/*
