{{- define "stackstate.ui.deployment.main.container" -}}
env:
{{- include "stackstate.common.envvars" . }}
{{- include "stackstate.ui.envvars" . }}
image: "{{ include "stackstate.image.registry" . }}/{{ .Values.stackstate.components.ui.image.repository }}{{ .Values.stackstate.components.all.image.repositorySuffix }}:{{ default .Values.stackstate.components.all.image.tag .Values.stackstate.components.ui.image.tag }}"
imagePullPolicy: {{ default .Values.stackstate.components.all.image.pullPolicy .Values.stackstate.components.ui.image.pullPolicy | quote }}
name: ui
ports:
- containerPort: 8080
  name: ui
livenessProbe:
  httpGet:
    path: /
    port: ui
  initialDelaySeconds: 5
readinessProbe:
  httpGet:
    path: /
    port: ui
  initialDelaySeconds: 5
{{- with .Values.stackstate.components.ui.resources }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}
securityContext:
  runAsNonRoot: true
{{- end -}}

{{- define "stackstate.ui.deployment.monitoring.container" -}}
env:
- name: NGINX_RETRIES
  value: "20"
- name: NGINX_RETRY_INTERVAL
  value: "3s"
image: "{{include "stackstate.nginxPrometheusExporter.image.registry" .}}/{{ .Values.stackstate.components.nginxPrometheusExporter.image.repository }}:{{ .Values.stackstate.components.nginxPrometheusExporter.image.tag }}"
imagePullPolicy: {{ .Values.stackstate.components.nginxPrometheusExporter.image.pullPolicy | quote }}
name: exporter
ports:
- containerPort: 9113
  name: metrics
  protocol: TCP
livenessProbe:
  httpGet:
    path: /
    port: metrics
  initialDelaySeconds: 30
  timeoutSeconds: 10
readinessProbe:
  httpGet:
    path: /
    port: metrics
  initialDelaySeconds: 30
  timeoutSeconds: 10
resources:
  limits:
    cpu: "20m"
    memory: "32Mi"
  requests:
    cpu: "20m"
    memory: "32Mi"
{{- end -}}

{{- define "stackstate.ui.deployment" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $stsstackstateUiMainContainer := fromYaml (include "stackstate.ui.deployment.main.container" .) }}
{{- $stsstackstateUiMonitoringContainer := fromYaml (include "stackstate.ui.deployment.monitoring.container" .) }}

metadata:
  name: {{ template "common.fullname.short" . }}-ui
  labels:
    app.kubernetes.io/component: ui
spec:
  replicas: {{ .Values.stackstate.components.ui.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: ui
  strategy:
{{- if eq (lower .Values.stackstate.components.all.deploymentStrategy.type) "recreatesingletonsonly" }}
    type: RollingUpdate
{{- else }}
    {{- toYaml .Values.stackstate.components.all.deploymentStrategy | nindent 4 }}
{{- end }}
  template:
    metadata:
      annotations:
        {{- include "common.metrics.annotations" (dict "metrics" .Values.stackstate.components.all.metrics "port" "9113" "container_name" "exporter" "filter" .Values.stackstate.components.ui.agentMetricsFilter) | indent 8 }}
        {{- include "stackstate.common.secret.checksum" . | nindent 8 }}
        {{- include "stackstate.ui.secret.checksum" . | nindent 8 }}
      labels:
        app.kubernetes.io/component: ui
    spec:
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
      containers:
      - {{ toYaml (merge $stsstackstateUiMainContainer $commonContainer) | nindent 8 }}
    {{- if .Values.stackstate.components.all.metrics.enabled }}
      - {{ toYaml (merge $stsstackstateUiMonitoringContainer $commonContainer) | nindent 8 }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.nodeSelector .Values.stackstate.components.ui.nodeSelector }}
      nodeSelector:
      {{- with .Values.stackstate.components.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.ui.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.affinity .Values.stackstate.components.ui.affinity }}
      affinity:
      {{- with .Values.stackstate.components.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.ui.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.tolerations .Values.stackstate.components.ui.tolerations }}
      tolerations:
      {{- with .Values.stackstate.components.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.ui.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if .Values.stackstate.components.ui.securityContext.enabled }}
      securityContext: {{- omit .Values.stackstate.components.ui.securityContext "enabled" | toYaml | nindent 8 }}
    {{- end }}
{{- end -}}

{{- $commonDeployment := fromYaml (include "common.deployment" .) -}}
{{- $uiDeployment := fromYaml (include "stackstate.ui.deployment" .) -}}
{{- toYaml (merge $uiDeployment $commonDeployment) -}}
