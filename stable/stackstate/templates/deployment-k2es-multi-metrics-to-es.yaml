{{- define "stackstate.k2es.deployment.multiMetricsToEs.container" -}}
args:
{{- include "stackstate.service.args" . }}
- multi-metrics
name: mm2es
volumeMounts:
{{- include "stackstate.service.container.volumes" . }}
{{- end -}}

{{- define "stackstate.k2es.multiMetricsToEs.deployment" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $mm2esConfig := dict "K2esName" "mm2es" "K2esConfig" .Values.stackstate.components.mm2es }}
{{- $commonKafkaToEsContainer := fromYaml (include "stackstate.k2es.deployment.common.container" (merge $mm2esConfig .)) -}}
{{- $commonKafkaToEsInitContainer := fromYaml (include "stackstate.k2es.deployment.common.initcontainer" .) -}}

{{- $multiMetricsToEsContainer := fromYaml (include "stackstate.k2es.deployment.multiMetricsToEs.container" .) }}

metadata:
  name: {{ template "common.fullname.short" . }}-mm2es
  labels:
    app.kubernetes.io/component: mm2es
spec:
  replicas: {{ .Values.stackstate.components.mm2es.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: mm2es
  strategy:
{{- if eq (lower .Values.stackstate.components.all.deploymentStrategy.type) "recreatesingletonsonly" }}
    type: RollingUpdate
{{- else }}
    {{- toYaml .Values.stackstate.components.all.deploymentStrategy | nindent 4 }}
{{- end }}
  template:
    metadata:
      annotations:
        {{- include "common.metrics.annotations" (dict "metrics" .Values.stackstate.components.all.metrics "port" "9404" "container_name" "mm2es" "filter" .Values.stackstate.components.mm2es.agentMetricsFilter) | indent 8 }}
        {{- include "stackstate.common.secret.checksum" . | nindent 8 }}
        {{- include "stackstate.mm2es.secret.checksum" . | nindent 8 }}
      labels:
        app.kubernetes.io/component: mm2es
    spec:
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
      initContainers:
      - {{ toYaml (merge $commonKafkaToEsInitContainer $commonContainer) | nindent 8 }}
      containers:
      - {{ toYaml (merge $multiMetricsToEsContainer $commonKafkaToEsContainer $commonContainer) | nindent 8 }}
      volumes:
        {{- include "stackstate.service.pod.volumes" (dict "pod_name" "mm2es" "root" . ) | nindent 8 }}
    {{- if or .Values.stackstate.components.all.nodeSelector .Values.stackstate.components.mm2es.nodeSelector }}
      nodeSelector:
      {{- with .Values.stackstate.components.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.mm2es.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.affinity .Values.stackstate.components.mm2es.affinity }}
      affinity:
      {{- with .Values.stackstate.components.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.mm2es.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.tolerations .Values.stackstate.components.mm2es.tolerations }}
      tolerations:
      {{- with .Values.stackstate.components.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.mm2es.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if .Values.stackstate.components.all.securityContext.enabled }}
      securityContext: {{- omit .Values.stackstate.components.all.securityContext "enabled" | toYaml | nindent 8 }}
    {{- end }}
{{- end -}}

{{- $commonDeployment := fromYaml (include "common.deployment" .) -}}
{{- $k2esMultiMetricsToEsDeployment := fromYaml (include "stackstate.k2es.multiMetricsToEs.deployment" .) -}}
{{- toYaml (merge $k2esMultiMetricsToEsDeployment $commonDeployment) -}}
