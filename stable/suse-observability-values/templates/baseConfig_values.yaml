{{- if .Values.baseConfig.generate }}
{{- include "sts.values.validateUrl" (dict "value" .Values.baseUrl "errorMessage" "Please provide your SUSE Observability base URL in 'values.baseUrl'") -}}
global:
{{- if .Values.imageRegistry }}
  imageRegistry: {{ .Values.imageRegistry | quote }}
{{- end }}
{{- if and .Values.pullSecret.username .Values.pullSecret.password }}
  imagePullSecrets:
    - suse-observability-pull-secret
{{- end }}

{{- if and .Values.pullSecret.username .Values.pullSecret.password }}
pull-secret:
  credentials:
    - password: {{ .Values.pullSecret.password | quote }}
      registry: {{ .Values.imageRegistry }}
      username: {{ .Values.pullSecret.username | quote }}
  enabled: true
  fullnameOverride: suse-observability-pull-secret
{{- end }}

stackstate:
  baseUrl: {{ .Values.baseUrl | quote }}
{{- if .Values.rancherUrl }}
  allowedOrigins:
    - {{ .Values.rancherUrl }}
{{- end }}
  authentication:
    adminPassword: {{ template "sts.values.getOrGenerateAdminPassword" . }}
  apiKey:
    key: {{ template "sts.values.receiverKey" . }}
  license:
    key: {{ .Values.license | required "Please provide your SUSE Observability license key in 'license'" | quote }}
---
{{ if .Values.generatedAdminPassword -}}
# Your SUSE Observability admin password is: {{ .Values.generatedAdminPassword }}
{{- end }}
{{- end }}
