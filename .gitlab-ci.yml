################################################################
# THIS FILE WAS GENERATED AUTOMATICALLY! DO NOT EDIT MANUALLY! #
################################################################
build_artifactory-cleaner:
  artifacts:
    paths:
      - stable/artifactory-cleaner/charts/
      - stable/artifactory-cleaner/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/artifactory-cleaner/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/artifactory-cleaner/%
    - helm dependencies build stable/artifactory-cleaner
    - mkdir -p stable/artifactory-cleaner/build; helm package --destination stable/artifactory-cleaner/build stable/artifactory-cleaner
  stage: build
build_aws-amicleaner:
  artifacts:
    paths:
      - stable/aws-amicleaner/charts/
      - stable/aws-amicleaner/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/aws-amicleaner/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/aws-amicleaner/%
    - helm dependencies build stable/aws-amicleaner
    - mkdir -p stable/aws-amicleaner/build; helm package --destination stable/aws-amicleaner/build stable/aws-amicleaner
  stage: build
build_aws-nuke:
  artifacts:
    paths:
      - stable/aws-nuke/charts/
      - stable/aws-nuke/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/aws-nuke/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/aws-nuke/%
    - helm dependencies build stable/aws-nuke
    - mkdir -p stable/aws-nuke/build; helm package --destination stable/aws-nuke/build stable/aws-nuke
  stage: build
build_aws-pod-identity-webhook:
  artifacts:
    paths:
      - stable/aws-pod-identity-webhook/charts/
      - stable/aws-pod-identity-webhook/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/aws-pod-identity-webhook/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/aws-pod-identity-webhook/%
    - helm dependencies build stable/aws-pod-identity-webhook
    - mkdir -p stable/aws-pod-identity-webhook/build; helm package --destination stable/aws-pod-identity-webhook/build stable/aws-pod-identity-webhook
  stage: build
build_beacher-job:
  artifacts:
    paths:
      - stable/beacher-job/charts/
      - stable/beacher-job/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/beacher-job/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/beacher-job/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/beacher-job/%
    - helm dependencies build stable/beacher-job
    - mkdir -p stable/beacher-job/build; helm package --destination stable/beacher-job/build stable/beacher-job
  stage: build
build_chartmuseum:
  artifacts:
    paths:
      - stable/chartmuseum/charts/
      - stable/chartmuseum/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/chartmuseum/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/chartmuseum/%
    - helm dependencies build stable/chartmuseum
    - mkdir -p stable/chartmuseum/build; helm package --destination stable/chartmuseum/build stable/chartmuseum
  stage: build
build_ci-test:
  artifacts:
    paths:
      - stable/ci-test/charts/
      - stable/ci-test/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/ci-test/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/ci-test/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/ci-test/%
    - helm dependencies build stable/ci-test
    - mkdir -p stable/ci-test/build; helm package --destination stable/ci-test/build stable/ci-test
  stage: build
build_common:
  artifacts:
    paths:
      - stable/common/charts/
      - stable/common/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/common/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/common/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/common/%
    - helm dependencies build stable/common
    - mkdir -p stable/common/build; helm package --destination stable/common/build stable/common
  stage: build
build_elasticsearch:
  artifacts:
    paths:
      - stable/elasticsearch/charts/
      - stable/elasticsearch/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/elasticsearch/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/elasticsearch/%
    - helm dependencies build stable/elasticsearch
    - mkdir -p stable/elasticsearch/build; helm package --destination stable/elasticsearch/build stable/elasticsearch
  stage: build
build_falco-reporter:
  artifacts:
    paths:
      - stable/falco-reporter/charts/
      - stable/falco-reporter/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/falco-reporter/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/falco-reporter/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/falco-reporter/%
    - helm dependencies build stable/falco-reporter
    - mkdir -p stable/falco-reporter/build; helm package --destination stable/falco-reporter/build stable/falco-reporter
  stage: build
build_gitlab-steward:
  artifacts:
    paths:
      - stable/gitlab-steward/charts/
      - stable/gitlab-steward/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/gitlab-steward/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/gitlab-steward/%
    - helm dependencies build stable/gitlab-steward
    - mkdir -p stable/gitlab-steward/build; helm package --destination stable/gitlab-steward/build stable/gitlab-steward
  stage: build
build_hbase:
  artifacts:
    paths:
      - stable/hbase/charts/
      - stable/hbase/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/hbase/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/hbase/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/hbase/%
    - helm dependencies build stable/hbase
    - mkdir -p stable/hbase/build; helm package --destination stable/hbase/build stable/hbase
  stage: build
build_helm-reaper:
  artifacts:
    paths:
      - stable/helm-reaper/charts/
      - stable/helm-reaper/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/helm-reaper/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/helm-reaper/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/helm-reaper/%
    - helm dependencies build stable/helm-reaper
    - mkdir -p stable/helm-reaper/build; helm package --destination stable/helm-reaper/build stable/helm-reaper
  stage: build
build_iceman:
  artifacts:
    paths:
      - stable/iceman/charts/
      - stable/iceman/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/iceman/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/iceman/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/iceman/%
    - helm dependencies build stable/iceman
    - mkdir -p stable/iceman/build; helm package --destination stable/iceman/build stable/iceman
  stage: build
build_k8s-image-list-to-s3:
  artifacts:
    paths:
      - stable/k8s-image-list-to-s3/charts/
      - stable/k8s-image-list-to-s3/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/k8s-image-list-to-s3/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/k8s-image-list-to-s3/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/k8s-image-list-to-s3/%
    - helm dependencies build stable/k8s-image-list-to-s3
    - mkdir -p stable/k8s-image-list-to-s3/build; helm package --destination stable/k8s-image-list-to-s3/build stable/k8s-image-list-to-s3
  stage: build
build_k8s-spot-termination-handler:
  artifacts:
    paths:
      - stable/k8s-spot-termination-handler/charts/
      - stable/k8s-spot-termination-handler/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/k8s-spot-termination-handler/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/k8s-spot-termination-handler/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/k8s-spot-termination-handler/%
    - helm dependencies build stable/k8s-spot-termination-handler
    - mkdir -p stable/k8s-spot-termination-handler/build; helm package --destination stable/k8s-spot-termination-handler/build stable/k8s-spot-termination-handler
  stage: build
build_kafkaup-operator:
  artifacts:
    paths:
      - stable/kafkaup-operator/charts/
      - stable/kafkaup-operator/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/kafkaup-operator/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/kafkaup-operator/%
    - helm dependencies build stable/kafkaup-operator
    - mkdir -p stable/kafkaup-operator/build; helm package --destination stable/kafkaup-operator/build stable/kafkaup-operator
  stage: build
build_kommoner-operator:
  artifacts:
    paths:
      - stable/kommoner-operator/charts/
      - stable/kommoner-operator/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/kommoner-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/kommoner-operator/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/kommoner-operator/%
    - helm dependencies build stable/kommoner-operator
    - mkdir -p stable/kommoner-operator/build; helm package --destination stable/kommoner-operator/build stable/kommoner-operator
  stage: build
build_minio:
  artifacts:
    paths:
      - stable/minio/charts/
      - stable/minio/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/minio/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/minio/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/minio/%
    - helm dependencies build stable/minio
    - mkdir -p stable/minio/build; helm package --destination stable/minio/build stable/minio
  stage: build
build_notification-operator:
  artifacts:
    paths:
      - stable/notification-operator/charts/
      - stable/notification-operator/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/notification-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/notification-operator/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/notification-operator/%
    - helm dependencies build stable/notification-operator
    - mkdir -p stable/notification-operator/build; helm package --destination stable/notification-operator/build stable/notification-operator
  stage: build
build_otel-demo:
  artifacts:
    paths:
      - stable/otel-demo/charts/
      - stable/otel-demo/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/otel-demo/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/otel-demo/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/otel-demo/%
    - helm dependencies build stable/otel-demo
    - mkdir -p stable/otel-demo/build; helm package --destination stable/otel-demo/build stable/otel-demo
  stage: build
build_petros-d-kubelet-stats-exporter:
  artifacts:
    paths:
      - stable/petros-d-kubelet-stats-exporter/charts/
      - stable/petros-d-kubelet-stats-exporter/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/petros-d-kubelet-stats-exporter/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/petros-d-kubelet-stats-exporter/%
    - helm dependencies build stable/petros-d-kubelet-stats-exporter
    - mkdir -p stable/petros-d-kubelet-stats-exporter/build; helm package --destination stable/petros-d-kubelet-stats-exporter/build stable/petros-d-kubelet-stats-exporter
  stage: build
build_pull-secret:
  artifacts:
    paths:
      - stable/pull-secret/charts/
      - stable/pull-secret/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/pull-secret/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/pull-secret/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/pull-secret/%
    - helm dependencies build stable/pull-secret
    - mkdir -p stable/pull-secret/build; helm package --destination stable/pull-secret/build stable/pull-secret
  stage: build
build_receiveramplifier:
  artifacts:
    paths:
      - stable/receiveramplifier/charts/
      - stable/receiveramplifier/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/receiveramplifier/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/receiveramplifier/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/receiveramplifier/%
    - helm dependencies build stable/receiveramplifier
    - mkdir -p stable/receiveramplifier/build; helm package --destination stable/receiveramplifier/build stable/receiveramplifier
  stage: build
build_redirector:
  artifacts:
    paths:
      - stable/redirector/charts/
      - stable/redirector/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/redirector/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/redirector/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/redirector/%
    - helm dependencies build stable/redirector
    - mkdir -p stable/redirector/build; helm package --destination stable/redirector/build stable/redirector
  stage: build
build_sandbox-operator:
  artifacts:
    paths:
      - stable/sandbox-operator/charts/
      - stable/sandbox-operator/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/sandbox-operator/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/sandbox-operator/%
    - helm dependencies build stable/sandbox-operator
    - mkdir -p stable/sandbox-operator/build; helm package --destination stable/sandbox-operator/build stable/sandbox-operator
  stage: build
build_sock-shop:
  artifacts:
    paths:
      - stable/sock-shop/charts/
      - stable/sock-shop/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/sock-shop/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/sock-shop/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/sock-shop/%
    - helm dependencies build stable/sock-shop
    - mkdir -p stable/sock-shop/build; helm package --destination stable/sock-shop/build stable/sock-shop
  stage: build
build_stackstate:
  artifacts:
    paths:
      - stable/stackstate/charts/
      - stable/stackstate/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate/%
    - helm dependencies build stable/stackstate
    - mkdir -p stable/stackstate/build; helm package --destination stable/stackstate/build stable/stackstate
  stage: build
build_stackstate-agent:
  artifacts:
    paths:
      - stable/stackstate-agent/charts/
      - stable/stackstate-agent/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate-agent/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate-agent/%
    - helm dependencies build stable/stackstate-agent
    - mkdir -p stable/stackstate-agent/build; helm package --destination stable/stackstate-agent/build stable/stackstate-agent
  stage: build
build_stackstate-k8s-agent:
  artifacts:
    paths:
      - stable/stackstate-k8s-agent/charts/
      - stable/stackstate-k8s-agent/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate-k8s-agent/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate-k8s-agent/%
    - helm dependencies build stable/stackstate-k8s-agent
    - mkdir -p stable/stackstate-k8s-agent/build; helm package --destination stable/stackstate-k8s-agent/build stable/stackstate-k8s-agent
  stage: build
build_stackstate-monitoring:
  artifacts:
    paths:
      - stable/stackstate-monitoring/charts/
      - stable/stackstate-monitoring/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate-monitoring/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate-monitoring/%
    - helm dependencies build stable/stackstate-monitoring
    - mkdir -p stable/stackstate-monitoring/build; helm package --destination stable/stackstate-monitoring/build stable/stackstate-monitoring
  stage: build
build_stackstate-standalone:
  artifacts:
    paths:
      - stable/stackstate-standalone/charts/
      - stable/stackstate-standalone/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate-standalone/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate-standalone/%
    - helm dependencies build stable/stackstate-standalone
    - mkdir -p stable/stackstate-standalone/build; helm package --destination stable/stackstate-standalone/build stable/stackstate-standalone
  stage: build
build_stackstate-values:
  artifacts:
    paths:
      - stable/stackstate-values/charts/
      - stable/stackstate-values/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate-values/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate-values/%
    - helm dependencies build stable/stackstate-values
    - mkdir -p stable/stackstate-values/build; helm package --destination stable/stackstate-values/build stable/stackstate-values
  stage: build
build_suse-observability:
  artifacts:
    paths:
      - stable/suse-observability/charts/
      - stable/suse-observability/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/suse-observability/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/suse-observability/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/suse-observability/%
    - helm dependencies build stable/suse-observability
    - mkdir -p stable/suse-observability/build; helm package --destination stable/suse-observability/build stable/suse-observability
  stage: build
build_suse-observability-agent:
  artifacts:
    paths:
      - stable/suse-observability-agent/charts/
      - stable/suse-observability-agent/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/suse-observability-agent/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/suse-observability-agent/%
    - helm dependencies build stable/suse-observability-agent
    - mkdir -p stable/suse-observability-agent/build; helm package --destination stable/suse-observability-agent/build stable/suse-observability-agent
  stage: build
build_suse-observability-values:
  artifacts:
    paths:
      - stable/suse-observability-values/charts/
      - stable/suse-observability-values/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/suse-observability-values/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/suse-observability-values/%
    - helm dependencies build stable/suse-observability-values
    - mkdir -p stable/suse-observability-values/build; helm package --destination stable/suse-observability-values/build stable/suse-observability-values
  stage: build
build_tenant-cleanup-controller:
  artifacts:
    paths:
      - stable/tenant-cleanup-controller/charts/
      - stable/tenant-cleanup-controller/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/tenant-cleanup-controller/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/tenant-cleanup-controller/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/tenant-cleanup-controller/%
    - helm dependencies build stable/tenant-cleanup-controller
    - mkdir -p stable/tenant-cleanup-controller/build; helm package --destination stable/tenant-cleanup-controller/build stable/tenant-cleanup-controller
  stage: build
build_tenantmanagement:
  artifacts:
    paths:
      - stable/tenantmanagement/charts/
      - stable/tenantmanagement/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/tenantmanagement/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/tenantmanagement/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/tenantmanagement/%
    - helm dependencies build stable/tenantmanagement
    - mkdir -p stable/tenantmanagement/build; helm package --destination stable/tenantmanagement/build stable/tenantmanagement
  stage: build
build_tenantprovisioning:
  artifacts:
    paths:
      - stable/tenantprovisioning/charts/
      - stable/tenantprovisioning/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/tenantprovisioning/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/tenantprovisioning/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/tenantprovisioning/%
    - helm dependencies build stable/tenantprovisioning
    - mkdir -p stable/tenantprovisioning/build; helm package --destination stable/tenantprovisioning/build stable/tenantprovisioning
  stage: build
build_trafficmirror:
  artifacts:
    paths:
      - stable/trafficmirror/charts/
      - stable/trafficmirror/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/trafficmirror/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/trafficmirror/%
    - helm dependencies build stable/trafficmirror
    - mkdir -p stable/trafficmirror/build; helm package --destination stable/trafficmirror/build stable/trafficmirror
  stage: build
build_victoria-metrics-single:
  artifacts:
    paths:
      - stable/victoria-metrics-single/charts/
      - stable/victoria-metrics-single/build/
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/victoria-metrics-single/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/victoria-metrics-single/%
    - helm dependencies build stable/victoria-metrics-single
    - mkdir -p stable/victoria-metrics-single/build; helm package --destination stable/victoria-metrics-single/build stable/victoria-metrics-single
  stage: build
check_artifactory-cleaner_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh artifactory-cleaner
  stage: validate
check_aws-amicleaner_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh aws-amicleaner
  stage: validate
check_aws-nuke_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh aws-nuke
  stage: validate
check_aws-pod-identity-webhook_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh aws-pod-identity-webhook
  stage: validate
check_beacher-job_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/beacher-job/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh beacher-job
  stage: validate
check_chartmuseum_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh chartmuseum
  stage: validate
check_ci-test_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/ci-test/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh ci-test
  stage: validate
check_common_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/common/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh common
  stage: validate
check_elasticsearch_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh elasticsearch
  stage: validate
check_falco-reporter_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/falco-reporter/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh falco-reporter
  stage: validate
check_gitlab-steward_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh gitlab-steward
  stage: validate
check_hbase_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/hbase/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh hbase
  stage: validate
check_helm-reaper_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/helm-reaper/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh helm-reaper
  stage: validate
check_iceman_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/iceman/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh iceman
  stage: validate
check_k8s-image-list-to-s3_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/k8s-image-list-to-s3/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh k8s-image-list-to-s3
  stage: validate
check_k8s-spot-termination-handler_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/k8s-spot-termination-handler/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh k8s-spot-termination-handler
  stage: validate
check_kafkaup-operator_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh kafkaup-operator
  stage: validate
check_kommoner-operator_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/kommoner-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh kommoner-operator
  stage: validate
check_minio_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/minio/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh minio
  stage: validate
check_notification-operator_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/notification-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh notification-operator
  stage: validate
check_otel-demo_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/otel-demo/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh otel-demo
  stage: validate
check_petros-d-kubelet-stats-exporter_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh petros-d-kubelet-stats-exporter
  stage: validate
check_pull-secret_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/pull-secret/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh pull-secret
  stage: validate
check_receiveramplifier_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/receiveramplifier/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh receiveramplifier
  stage: validate
check_redirector_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/redirector/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh redirector
  stage: validate
check_sandbox-operator_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh sandbox-operator
  stage: validate
check_sock-shop_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/sock-shop/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh sock-shop
  stage: validate
check_stackstate-agent_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh stackstate-agent
  stage: validate
check_stackstate-k8s-agent_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh stackstate-k8s-agent
  stage: validate
check_stackstate-monitoring_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh stackstate-monitoring
  stage: validate
check_stackstate-standalone_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh stackstate-standalone
  stage: validate
check_stackstate-values_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh stackstate-values
  stage: validate
check_suse-observability-agent_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh suse-observability-agent
  stage: validate
check_suse-observability-values_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh suse-observability-values
  stage: validate
check_tenant-cleanup-controller_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/tenant-cleanup-controller/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh tenant-cleanup-controller
  stage: validate
check_tenantmanagement_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/tenantmanagement/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh tenantmanagement
  stage: validate
check_tenantprovisioning_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/tenantprovisioning/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh tenantprovisioning
  stage: validate
check_trafficmirror_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh trafficmirror
  stage: validate
check_victoria-metrics-single_version:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - .gitlab/verify_versions_bumped.sh victoria-metrics-single
  stage: validate
image: quay.io/helmpack/chart-testing:v3.10.1
push_artifactory-cleaner_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-artifactory-cleaner]/
      when: on_success
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^artifactory-cleaner\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/artifactory-cleaner
push_artifactory-cleaner_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_artifactory-cleaner_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-artifactory-cleaner]/
      when: on_success
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^artifactory-cleaner\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/artifactory-cleaner
push_aws-amicleaner_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-aws-amicleaner]/
      when: on_success
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^aws-amicleaner\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-amicleaner
push_aws-nuke_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-aws-nuke]/
      when: on_success
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^aws-nuke\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-nuke
push_aws-pod-identity-webhook_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-aws-pod-identity-webhook]/
      when: on_success
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^aws-pod-identity-webhook\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/aws-pod-identity-webhook
push_beacher-job_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/beacher-job/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-beacher-job]/
      when: on_success
    - changes:
        - stable/beacher-job/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/beacher-job/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^beacher-job\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/beacher-job
push_chartmuseum_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-chartmuseum]/
      when: on_success
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^chartmuseum\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/chartmuseum
push_ci-test_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
    - .gitlab/configure_git.sh
    - export BRANCHES=${CI_COMMIT_BRANCH:-$(git for-each-ref --format="%(objectname) %(refname:short)" refs/remotes/origin | awk -v branch="$(git rev-parse HEAD)" '$1==branch && $2!="origin" {print $2}' | sed -E "s/^origin\/(.*)$/\1/")}
    - .gitlab/set_sts_chart_master_version.sh stable/ci-test $(echo $CI_COMMIT_TAG | sed -E 's/^ci-test\/(.*)$/\1/')
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/ci-test/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-ci-test]/
      when: on_success
    - changes:
        - stable/ci-test/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/ci-test/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^ci-test\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
    - .gitlab/tag_sts_chart_pre_release.sh ci-test
    - .gitlab/bump_sts_chart_master_version_v2.sh stable/ci-test
  stage: push-charts-to-internal
  variables:
    CHART: stable/ci-test
push_common_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-common]/
      when: on_success
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^common\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/common
push_common_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_common_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-common]/
      when: on_success
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/common/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^common\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/common
push_elasticsearch_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-elasticsearch]/
      when: on_success
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^elasticsearch\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/elasticsearch
push_elasticsearch_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_elasticsearch_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-elasticsearch]/
      when: on_success
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^elasticsearch\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/elasticsearch
push_falco-reporter_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/falco-reporter/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-falco-reporter]/
      when: on_success
    - changes:
        - stable/falco-reporter/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/falco-reporter/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^falco-reporter\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/falco-reporter
push_gitlab-steward_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-gitlab-steward]/
      when: on_success
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^gitlab-steward\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/gitlab-steward
push_hbase_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-hbase]/
      when: on_success
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^hbase\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/hbase
push_hbase_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_hbase_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-hbase]/
      when: on_success
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/hbase/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^hbase\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/hbase
push_helm-reaper_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/helm-reaper/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-helm-reaper]/
      when: on_success
    - changes:
        - stable/helm-reaper/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/helm-reaper/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^helm-reaper\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/helm-reaper
push_iceman_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/iceman/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-iceman]/
      when: on_success
    - changes:
        - stable/iceman/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/iceman/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^iceman\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/iceman
push_k8s-image-list-to-s3_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/k8s-image-list-to-s3/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-k8s-image-list-to-s3]/
      when: on_success
    - changes:
        - stable/k8s-image-list-to-s3/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/k8s-image-list-to-s3/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^k8s-image-list-to-s3\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/k8s-image-list-to-s3
push_k8s-spot-termination-handler_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/k8s-spot-termination-handler/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-k8s-spot-termination-handler]/
      when: on_success
    - changes:
        - stable/k8s-spot-termination-handler/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/k8s-spot-termination-handler/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^k8s-spot-termination-handler\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/k8s-spot-termination-handler
push_kafkaup-operator_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-kafkaup-operator]/
      when: on_success
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^kafkaup-operator\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/kafkaup-operator
push_kafkaup-operator_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_kafkaup-operator_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-kafkaup-operator]/
      when: on_success
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^kafkaup-operator\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/kafkaup-operator
push_kommoner-operator_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/kommoner-operator/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-kommoner-operator]/
      when: on_success
    - changes:
        - stable/kommoner-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/kommoner-operator/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^kommoner-operator\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/kommoner-operator
push_minio_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/minio/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-minio]/
      when: on_success
    - changes:
        - stable/minio/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/minio/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^minio\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/minio
push_minio_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_minio_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/minio/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-minio]/
      when: on_success
    - changes:
        - stable/minio/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/minio/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^minio\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/minio
push_notification-operator_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/notification-operator/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-notification-operator]/
      when: on_success
    - changes:
        - stable/notification-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/notification-operator/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^notification-operator\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/notification-operator
push_otel-demo_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/otel-demo/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-otel-demo]/
      when: on_success
    - changes:
        - stable/otel-demo/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/otel-demo/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^otel-demo\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/otel-demo
push_petros-d-kubelet-stats-exporter_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-petros-d-kubelet-stats-exporter]/
      when: on_success
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^petros-d-kubelet-stats-exporter\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/petros-d-kubelet-stats-exporter
push_pull-secret_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/pull-secret/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-pull-secret]/
      when: on_success
    - changes:
        - stable/pull-secret/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/pull-secret/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^pull-secret\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/pull-secret
push_pull-secret_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_pull-secret_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/pull-secret/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-pull-secret]/
      when: on_success
    - changes:
        - stable/pull-secret/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/pull-secret/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^pull-secret\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/pull-secret
push_receiveramplifier_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/receiveramplifier/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-receiveramplifier]/
      when: on_success
    - changes:
        - stable/receiveramplifier/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/receiveramplifier/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^receiveramplifier\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/receiveramplifier
push_redirector_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/redirector/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-redirector]/
      when: on_success
    - changes:
        - stable/redirector/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/redirector/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^redirector\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/redirector
push_sandbox-operator_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-sandbox-operator]/
      when: on_success
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^sandbox-operator\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/sandbox-operator
push_sock-shop_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/sock-shop/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-sock-shop]/
      when: on_success
    - changes:
        - stable/sock-shop/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/sock-shop/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^sock-shop\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/sock-shop
push_stackstate-agent_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate-agent]/
      when: on_success
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^stackstate-agent\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-agent
push_stackstate-agent_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_stackstate-agent_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate-agent]/
      when: on_success
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^stackstate-agent\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-agent
push_stackstate-k8s-agent_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-k8s-agent]/
      when: on_success
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^stackstate-k8s-agent\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-k8s-agent
push_stackstate-k8s-agent_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_stackstate-k8s-agent_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-k8s-agent]/
      when: on_success
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^stackstate-k8s-agent\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-k8s-agent
push_stackstate-monitoring_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate-monitoring]/
      when: on_success
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^stackstate-monitoring\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-monitoring
push_stackstate-monitoring_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_stackstate-monitoring_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate-monitoring]/
      when: on_success
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^stackstate-monitoring\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-monitoring
push_stackstate-standalone_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate-standalone]/
      when: on_success
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^stackstate-standalone\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-standalone
push_stackstate-standalone_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_stackstate-standalone_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate-standalone]/
      when: on_success
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^stackstate-standalone\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-standalone
push_stackstate-values_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate-values]/
      when: on_success
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^stackstate-values\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate-values
push_stackstate-values_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_stackstate-values_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate-values]/
      when: on_success
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^stackstate-values\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate-values
push_stackstate_release_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-pre\.(\d+)\.rc\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-rc\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)$/
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)-pre\.(\d+)$/
      when: on_success
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate/%
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate
push_stackstate_release_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - if: $CI_COMMIT_TAG =~ /^(\d+)\.(\d+)\.(\d+)$/
      when: on_success
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate/%
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/stackstate
push_stackstate_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
    - .gitlab/bump_sts_chart_master_version.sh stackstate-internal stackstate
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/stackstate/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-stackstate]/
      when: on_success
    - changes:
        - stable/stackstate/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/stackstate/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^stackstate\/.*/
      when: on_success
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/stackstate/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/stackstate/%
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/stackstate
push_suse-observability-agent_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-suse-observability-agent]/
      when: on_success
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^suse-observability-agent\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/suse-observability-agent
push_suse-observability-agent_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_suse-observability-agent_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-suse-observability-agent]/
      when: on_success
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^suse-observability-agent\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/suse-observability-agent
push_suse-observability-agent_to_rancher:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_suse-observability-agent_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-suse-observability-agent]/
      when: on_success
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^suse-observability-agent\/.*/
      when: on_success
  script:
    - .gitlab/publish-suse-agent-to-rancher.sh
  stage: push-charts-to-rancher
  variables:
    CHART: stable/suse-observability-agent
push_suse-observability-values_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-suse-observability-values]/
      when: on_success
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^suse-observability-values\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/suse-observability-values
push_suse-observability-values_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_suse-observability-values_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-suse-observability-values]/
      when: on_success
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^suse-observability-values\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/suse-observability-values
push_suse-observability-values_to_rancher:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_suse-observability-values_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-suse-observability-values]/
      when: on_success
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^suse-observability-values\/.*/
      when: on_success
  script:
    - .gitlab/publish-suse-observability-values-to-rancher.sh
  stage: push-charts-to-rancher
  variables:
    CHART: stable/suse-observability-values
push_suse-observability_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
    - .gitlab/configure_git.sh
    - export BRANCHES=${CI_COMMIT_BRANCH:-$(git for-each-ref --format="%(objectname) %(refname:short)" refs/remotes/origin | awk -v branch="$(git rev-parse HEAD)" '$1==branch && $2!="origin" {print $2}' | sed -E "s/^origin\/(.*)$/\1/")}
    - .gitlab/set_sts_chart_master_version.sh stable/suse-observability $(echo $CI_COMMIT_TAG | sed -E 's/^suse-observability\/(.*)$/\1/')
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/suse-observability/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-suse-observability]/
      when: on_success
    - changes:
        - stable/suse-observability/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/suse-observability/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^suse-observability\/.*/
      when: on_success
  script:
    - yq e '.dependencies[] | select (.repository == "file*").repository | sub("^file://","")' stable/suse-observability/Chart.yaml  | xargs -I % helm dependencies build --skip-refresh stable/suse-observability/%
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
    - .gitlab/tag_sts_chart_pre_release.sh suse-observability
    - .gitlab/bump_sts_chart_master_version_v2.sh stable/suse-observability
  stage: push-charts-to-internal
  variables:
    CHART: stable/suse-observability
push_tenant-cleanup-controller_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/tenant-cleanup-controller/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-tenant-cleanup-controller]/
      when: on_success
    - changes:
        - stable/tenant-cleanup-controller/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/tenant-cleanup-controller/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^tenant-cleanup-controller\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/tenant-cleanup-controller
push_tenantmanagement_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/tenantmanagement/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-tenantmanagement]/
      when: on_success
    - changes:
        - stable/tenantmanagement/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/tenantmanagement/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^tenantmanagement\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/tenantmanagement
push_tenantprovisioning_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/tenantprovisioning/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-tenantprovisioning]/
      when: on_success
    - changes:
        - stable/tenantprovisioning/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/tenantprovisioning/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^tenantprovisioning\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/tenantprovisioning
push_test_charts:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  script:
    - source .gitlab/aws_auth_setup.sh
    - sh test/sync-repo.sh
  stage: push-charts-to-test
  variables:
    AWS_BUCKET: s3://helm-test.stackstate.io
    REPO_URL: https://helm-test.stackstate.io/
push_trafficmirror_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-trafficmirror]/
      when: on_success
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^trafficmirror\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/trafficmirror
push_trafficmirror_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_trafficmirror_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-trafficmirror]/
      when: on_success
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^trafficmirror\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/trafficmirror
push_victoria-metrics-single_to_internal:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-victoria-metrics-single]/
      when: on_success
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: on_success
    - if: $CI_COMMIT_TAG =~ /^victoria-metrics-single\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_INTERNAL_USERNAME} --password ${CHARTMUSEUM_INTERNAL_PASSWORD} ${CHART} ${CHARTMUSEUM_INTERNAL_URL}
  stage: push-charts-to-internal
  variables:
    CHART: stable/victoria-metrics-single
push_victoria-metrics-single_to_public:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  needs:
    - push_victoria-metrics-single_to_internal
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: never
    - if: $UPDATE_AAD_CHART_VERSION
      when: never
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: never
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: never
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_AUTHOR == "stackstate-system-user <suse-observability-ops@stackstate.com>"  && $CI_COMMIT_MESSAGE =~ /\[publish-victoria-metrics-single]/
      when: on_success
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_COMMIT_BRANCH == "stac-22745"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^victoria-metrics-single\/.*/
      when: on_success
  script:
    - helm dependencies update --skip-refresh ${CHART}
    - helm cm-push --username ${CHARTMUSEUM_USERNAME} --password ${CHARTMUSEUM_PASSWORD} ${CHART} ${CHARTMUSEUM_URL}
  stage: push-charts-to-public
  variables:
    CHART: stable/victoria-metrics-single
stages:
  - build
  - push-charts-to-test
  - validate
  - test
  - update
  - push-charts-to-internal
  - push-charts-to-public
  - push-charts-to-rancher
test_artifactory-cleaner:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/artifactory-cleaner/**/*
      exists:
        - stable/artifactory-cleaner/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/artifactory-cleaner/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_aws-amicleaner:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/aws-amicleaner/**/*
      exists:
        - stable/aws-amicleaner/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/aws-amicleaner/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_aws-nuke:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/aws-nuke/**/*
      exists:
        - stable/aws-nuke/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/aws-nuke/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_aws-pod-identity-webhook:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      exists:
        - stable/aws-pod-identity-webhook/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/aws-pod-identity-webhook/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_beacher-job:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/beacher-job/**/*
      exists:
        - stable/beacher-job/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/beacher-job/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_chartmuseum:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/chartmuseum/**/*
      exists:
        - stable/chartmuseum/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/chartmuseum/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_ci-test:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/ci-test/**/*
      exists:
        - stable/ci-test/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/ci-test/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_common:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/common/**/*
      exists:
        - stable/common/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/common/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_elasticsearch:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/elasticsearch/**/*
      exists:
        - stable/elasticsearch/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/elasticsearch/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_falco-reporter:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/falco-reporter/**/*
      exists:
        - stable/falco-reporter/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/falco-reporter/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_gitlab-steward:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/gitlab-steward/**/*
      exists:
        - stable/gitlab-steward/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/gitlab-steward/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_hbase:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/hbase/**/*
      exists:
        - stable/hbase/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/hbase/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_helm-reaper:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/helm-reaper/**/*
      exists:
        - stable/helm-reaper/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/helm-reaper/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_iceman:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/iceman/**/*
      exists:
        - stable/iceman/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/iceman/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_k8s-image-list-to-s3:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/k8s-image-list-to-s3/**/*
      exists:
        - stable/k8s-image-list-to-s3/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/k8s-image-list-to-s3/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_k8s-spot-termination-handler:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/k8s-spot-termination-handler/**/*
      exists:
        - stable/k8s-spot-termination-handler/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/k8s-spot-termination-handler/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_kafkaup-operator:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/kafkaup-operator/**/*
      exists:
        - stable/kafkaup-operator/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/kafkaup-operator/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_kommoner-operator:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/kommoner-operator/**/*
      exists:
        - stable/kommoner-operator/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/kommoner-operator/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_minio:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/minio/**/*
      exists:
        - stable/minio/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/minio/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_notification-operator:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/notification-operator/**/*
      exists:
        - stable/notification-operator/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/notification-operator/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_otel-demo:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/otel-demo/**/*
      exists:
        - stable/otel-demo/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/otel-demo/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_petros-d-kubelet-stats-exporter:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      exists:
        - stable/petros-d-kubelet-stats-exporter/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/petros-d-kubelet-stats-exporter/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_pull-secret:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/pull-secret/**/*
      exists:
        - stable/pull-secret/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/pull-secret/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_receiveramplifier:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/receiveramplifier/**/*
      exists:
        - stable/receiveramplifier/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/receiveramplifier/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_redirector:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/redirector/**/*
      exists:
        - stable/redirector/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/redirector/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_sandbox-operator:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/sandbox-operator/**/*
      exists:
        - stable/sandbox-operator/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/sandbox-operator/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_sock-shop:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/sock-shop/**/*
      exists:
        - stable/sock-shop/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/sock-shop/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_stackstate:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate/**/*
      exists:
        - stable/stackstate/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_stackstate-agent:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-agent/**/*
      exists:
        - stable/stackstate-agent/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-agent/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_stackstate-k8s-agent:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-k8s-agent/**/*
      exists:
        - stable/stackstate-k8s-agent/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-k8s-agent/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_stackstate-monitoring:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-monitoring/**/*
      exists:
        - stable/stackstate-monitoring/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-monitoring/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_stackstate-standalone:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-standalone/**/*
      exists:
        - stable/stackstate-standalone/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-standalone/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_stackstate-values:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/stackstate-values/**/*
      exists:
        - stable/stackstate-values/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/stackstate-values/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_suse-observability:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/suse-observability/**/*
      exists:
        - stable/suse-observability/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/suse-observability/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_suse-observability-agent:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/suse-observability-agent/**/*
      exists:
        - stable/suse-observability-agent/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/suse-observability-agent/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_suse-observability-values:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/suse-observability-values/**/*
      exists:
        - stable/suse-observability-values/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/suse-observability-values/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_tenant-cleanup-controller:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/tenant-cleanup-controller/**/*
      exists:
        - stable/tenant-cleanup-controller/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/tenant-cleanup-controller/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_tenantmanagement:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/tenantmanagement/**/*
      exists:
        - stable/tenantmanagement/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/tenantmanagement/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_tenantprovisioning:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/tenantprovisioning/**/*
      exists:
        - stable/tenantprovisioning/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/tenantprovisioning/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_trafficmirror:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/trafficmirror/**/*
      exists:
        - stable/trafficmirror/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/trafficmirror/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
test_victoria-metrics-single:
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - changes:
        - stable/victoria-metrics-single/**/*
      exists:
        - stable/victoria-metrics-single/test/*.go
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test ./stable/victoria-metrics-single/test/...
  stage: test
  variables:
    CGO_ENABLED: 0
update_aad_chart_version:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - if: $UPDATE_AAD_CHART_VERSION
      when: always
  script:
    - .gitlab/update_chart_version.sh stable/suse-observability anomaly-detection $UPDATE_AAD_CHART_VERSION
    - .gitlab/commit_changes_and_push.sh anomaly-detection $UPDATE_AAD_CHART_VERSION
  stage: update
update_stackgraph_version:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add bitnami-full-archive https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami
    - helm repo add bitnami-pre-2022 https://raw.githubusercontent.com/bitnami/charts/eb5f9a9513d987b519f0ecd732e7031241c50328/bitnami
    - helm repo add elastic https://helm.elastic.co
    - helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
    - helm repo add prometheus https://prometheus-community.github.io/helm-charts
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add stackstate https://helm.stackstate.io
    - helm repo add stackstate-internal https://helm-internal.stackstate.io
    - helm repo add stackstate-test https://helm-test.stackstate.io
    - helm repo add victoriametrics https://victoriametrics.github.io/helm-charts
    - helm repo update
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-helm-test-941a5527
  rules:
    - if: $UPDATE_STACKGRAPH_VERSION
      when: always
  script:
    - .gitlab/update_sg_version.sh stable/hbase ""
    - .gitlab/update_sg_version.sh stable/suse-observability "hbase."
    - .gitlab/update_chart_version.sh stable/suse-observability hbase local:stable/hbase
    - .gitlab/commit_changes_and_push.sh StackGraph $UPDATE_STACKGRAPH_VERSION
  stage: update
update_stackpacks_version_to_latest:
  before_script:
    - .gitlab/configure_git.sh
    - export BRANCHES=${CI_COMMIT_BRANCH:-$(git for-each-ref --format="%(objectname) %(refname:short)" refs/remotes/origin | awk -v branch="$(git rev-parse HEAD)" '$1==branch && $2!="origin" {print $2}' | sed -E "s/^origin\/(.*)$/\1/")}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKPACKS_DOCKER_VERSION
      when: always
    - when: never
  script:
    - .gitlab/suse-observability/update_stackpacks_version_to_latest.sh
  stage: update
update_stackstate_version_to_latest:
  before_script:
    - .gitlab/configure_git.sh
    - export BRANCHES=${CI_COMMIT_BRANCH:-$(git for-each-ref --format="%(objectname) %(refname:short)" refs/remotes/origin | awk -v branch="$(git rev-parse HEAD)" '$1==branch && $2!="origin" {print $2}' | sed -E "s/^origin\/(.*)$/\1/")}
  image: ${DOCKER_PROXY_URL}/stackstate/sts-ci-images:stackstate-devops-fd4b135a
  rules:
    - if: $UPDATE_STACKSTATE_DOCKER_VERSION
      when: always
    - when: never
  script:
    - .gitlab/suse-observability/update_stackstate_version_to_latest.sh
  stage: update
validate_artifactory-cleaner:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/artifactory-cleaner/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/artifactory-cleaner/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/artifactory-cleaner/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/artifactory-cleaner/values.yaml
    - if [ -f stable/artifactory-cleaner/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/artifactory-cleaner/ci/default-values.yaml; fi
    - if [ -f stable/artifactory-cleaner/ci/default-values.yaml ]; then helm lint stable/artifactory-cleaner --values stable/artifactory-cleaner/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_aws-amicleaner:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/aws-amicleaner/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/aws-amicleaner/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/aws-amicleaner/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/aws-amicleaner/values.yaml
    - if [ -f stable/aws-amicleaner/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/aws-amicleaner/ci/default-values.yaml; fi
    - if [ -f stable/aws-amicleaner/ci/default-values.yaml ]; then helm lint stable/aws-amicleaner --values stable/aws-amicleaner/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_aws-nuke:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/aws-nuke/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/aws-nuke/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/aws-nuke/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/aws-nuke/values.yaml
    - if [ -f stable/aws-nuke/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/aws-nuke/ci/default-values.yaml; fi
    - if [ -f stable/aws-nuke/ci/default-values.yaml ]; then helm lint stable/aws-nuke --values stable/aws-nuke/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_aws-pod-identity-webhook:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/aws-pod-identity-webhook/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/aws-pod-identity-webhook/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/aws-pod-identity-webhook/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/aws-pod-identity-webhook/values.yaml
    - if [ -f stable/aws-pod-identity-webhook/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/aws-pod-identity-webhook/ci/default-values.yaml; fi
    - if [ -f stable/aws-pod-identity-webhook/ci/default-values.yaml ]; then helm lint stable/aws-pod-identity-webhook --values stable/aws-pod-identity-webhook/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_beacher-job:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/beacher-job/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/beacher-job/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/beacher-job/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/beacher-job/values.yaml
    - if [ -f stable/beacher-job/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/beacher-job/ci/default-values.yaml; fi
    - if [ -f stable/beacher-job/ci/default-values.yaml ]; then helm lint stable/beacher-job --values stable/beacher-job/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_chartmuseum:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/chartmuseum/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/chartmuseum/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/chartmuseum/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/chartmuseum/values.yaml
    - if [ -f stable/chartmuseum/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/chartmuseum/ci/default-values.yaml; fi
    - if [ -f stable/chartmuseum/ci/default-values.yaml ]; then helm lint stable/chartmuseum --values stable/chartmuseum/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_ci-test:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/ci-test/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/ci-test/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/ci-test/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/ci-test/values.yaml
    - if [ -f stable/ci-test/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/ci-test/ci/default-values.yaml; fi
    - if [ -f stable/ci-test/ci/default-values.yaml ]; then helm lint stable/ci-test --values stable/ci-test/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_common:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/common/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/common/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/common/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/common/values.yaml
    - if [ -f stable/common/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/common/ci/default-values.yaml; fi
    - if [ -f stable/common/ci/default-values.yaml ]; then helm lint stable/common --values stable/common/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_elasticsearch:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/elasticsearch/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/elasticsearch/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/elasticsearch/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/elasticsearch/values.yaml
    - if [ -f stable/elasticsearch/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/elasticsearch/ci/default-values.yaml; fi
    - if [ -f stable/elasticsearch/ci/default-values.yaml ]; then helm lint stable/elasticsearch --values stable/elasticsearch/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_falco-reporter:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/falco-reporter/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/falco-reporter/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/falco-reporter/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/falco-reporter/values.yaml
    - if [ -f stable/falco-reporter/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/falco-reporter/ci/default-values.yaml; fi
    - if [ -f stable/falco-reporter/ci/default-values.yaml ]; then helm lint stable/falco-reporter --values stable/falco-reporter/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_gitlab-steward:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/gitlab-steward/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/gitlab-steward/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/gitlab-steward/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/gitlab-steward/values.yaml
    - if [ -f stable/gitlab-steward/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/gitlab-steward/ci/default-values.yaml; fi
    - if [ -f stable/gitlab-steward/ci/default-values.yaml ]; then helm lint stable/gitlab-steward --values stable/gitlab-steward/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_hbase:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/hbase/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/hbase/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/hbase/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/hbase/values.yaml
    - if [ -f stable/hbase/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/hbase/ci/default-values.yaml; fi
    - if [ -f stable/hbase/ci/default-values.yaml ]; then helm lint stable/hbase --values stable/hbase/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_helm-reaper:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/helm-reaper/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/helm-reaper/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/helm-reaper/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/helm-reaper/values.yaml
    - if [ -f stable/helm-reaper/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/helm-reaper/ci/default-values.yaml; fi
    - if [ -f stable/helm-reaper/ci/default-values.yaml ]; then helm lint stable/helm-reaper --values stable/helm-reaper/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_iceman:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/iceman/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/iceman/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/iceman/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/iceman/values.yaml
    - if [ -f stable/iceman/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/iceman/ci/default-values.yaml; fi
    - if [ -f stable/iceman/ci/default-values.yaml ]; then helm lint stable/iceman --values stable/iceman/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_k8s-image-list-to-s3:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/k8s-image-list-to-s3/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/k8s-image-list-to-s3/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/k8s-image-list-to-s3/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/k8s-image-list-to-s3/values.yaml
    - if [ -f stable/k8s-image-list-to-s3/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/k8s-image-list-to-s3/ci/default-values.yaml; fi
    - if [ -f stable/k8s-image-list-to-s3/ci/default-values.yaml ]; then helm lint stable/k8s-image-list-to-s3 --values stable/k8s-image-list-to-s3/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_k8s-spot-termination-handler:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/k8s-spot-termination-handler/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/k8s-spot-termination-handler/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/k8s-spot-termination-handler/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/k8s-spot-termination-handler/values.yaml
    - if [ -f stable/k8s-spot-termination-handler/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/k8s-spot-termination-handler/ci/default-values.yaml; fi
    - if [ -f stable/k8s-spot-termination-handler/ci/default-values.yaml ]; then helm lint stable/k8s-spot-termination-handler --values stable/k8s-spot-termination-handler/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_kafkaup-operator:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/kafkaup-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/kafkaup-operator/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/kafkaup-operator/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/kafkaup-operator/values.yaml
    - if [ -f stable/kafkaup-operator/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/kafkaup-operator/ci/default-values.yaml; fi
    - if [ -f stable/kafkaup-operator/ci/default-values.yaml ]; then helm lint stable/kafkaup-operator --values stable/kafkaup-operator/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_kommoner-operator:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/kommoner-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/kommoner-operator/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/kommoner-operator/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/kommoner-operator/values.yaml
    - if [ -f stable/kommoner-operator/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/kommoner-operator/ci/default-values.yaml; fi
    - if [ -f stable/kommoner-operator/ci/default-values.yaml ]; then helm lint stable/kommoner-operator --values stable/kommoner-operator/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_minio:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/minio/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/minio/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/minio/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/minio/values.yaml
    - if [ -f stable/minio/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/minio/ci/default-values.yaml; fi
    - if [ -f stable/minio/ci/default-values.yaml ]; then helm lint stable/minio --values stable/minio/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_notification-operator:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/notification-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/notification-operator/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/notification-operator/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/notification-operator/values.yaml
    - if [ -f stable/notification-operator/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/notification-operator/ci/default-values.yaml; fi
    - if [ -f stable/notification-operator/ci/default-values.yaml ]; then helm lint stable/notification-operator --values stable/notification-operator/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_otel-demo:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/otel-demo/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/otel-demo/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/otel-demo/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/otel-demo/values.yaml
    - if [ -f stable/otel-demo/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/otel-demo/ci/default-values.yaml; fi
    - if [ -f stable/otel-demo/ci/default-values.yaml ]; then helm lint stable/otel-demo --values stable/otel-demo/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_petros-d-kubelet-stats-exporter:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/petros-d-kubelet-stats-exporter/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/petros-d-kubelet-stats-exporter/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/petros-d-kubelet-stats-exporter/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/petros-d-kubelet-stats-exporter/values.yaml
    - if [ -f stable/petros-d-kubelet-stats-exporter/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/petros-d-kubelet-stats-exporter/ci/default-values.yaml; fi
    - if [ -f stable/petros-d-kubelet-stats-exporter/ci/default-values.yaml ]; then helm lint stable/petros-d-kubelet-stats-exporter --values stable/petros-d-kubelet-stats-exporter/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_pull-secret:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/pull-secret/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/pull-secret/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/pull-secret/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/pull-secret/values.yaml
    - if [ -f stable/pull-secret/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/pull-secret/ci/default-values.yaml; fi
    - if [ -f stable/pull-secret/ci/default-values.yaml ]; then helm lint stable/pull-secret --values stable/pull-secret/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_receiveramplifier:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/receiveramplifier/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/receiveramplifier/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/receiveramplifier/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/receiveramplifier/values.yaml
    - if [ -f stable/receiveramplifier/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/receiveramplifier/ci/default-values.yaml; fi
    - if [ -f stable/receiveramplifier/ci/default-values.yaml ]; then helm lint stable/receiveramplifier --values stable/receiveramplifier/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_redirector:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/redirector/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/redirector/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/redirector/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/redirector/values.yaml
    - if [ -f stable/redirector/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/redirector/ci/default-values.yaml; fi
    - if [ -f stable/redirector/ci/default-values.yaml ]; then helm lint stable/redirector --values stable/redirector/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_sandbox-operator:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/sandbox-operator/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/sandbox-operator/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/sandbox-operator/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/sandbox-operator/values.yaml
    - if [ -f stable/sandbox-operator/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/sandbox-operator/ci/default-values.yaml; fi
    - if [ -f stable/sandbox-operator/ci/default-values.yaml ]; then helm lint stable/sandbox-operator --values stable/sandbox-operator/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_sock-shop:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/sock-shop/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/sock-shop/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/sock-shop/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/sock-shop/values.yaml
    - if [ -f stable/sock-shop/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/sock-shop/ci/default-values.yaml; fi
    - if [ -f stable/sock-shop/ci/default-values.yaml ]; then helm lint stable/sock-shop --values stable/sock-shop/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_stackstate:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/stackstate/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate/values.yaml
    - if [ -f stable/stackstate/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate/ci/default-values.yaml; fi
    - if [ -f stable/stackstate/ci/default-values.yaml ]; then helm lint stable/stackstate --values stable/stackstate/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_stackstate-agent:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/stackstate-agent/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-agent/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-agent/values.yaml
    - if [ -f stable/stackstate-agent/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-agent/ci/default-values.yaml; fi
    - if [ -f stable/stackstate-agent/ci/default-values.yaml ]; then helm lint stable/stackstate-agent --values stable/stackstate-agent/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_stackstate-k8s-agent:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-k8s-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/stackstate-k8s-agent/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-k8s-agent/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-k8s-agent/values.yaml
    - if [ -f stable/stackstate-k8s-agent/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-k8s-agent/ci/default-values.yaml; fi
    - if [ -f stable/stackstate-k8s-agent/ci/default-values.yaml ]; then helm lint stable/stackstate-k8s-agent --values stable/stackstate-k8s-agent/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_stackstate-monitoring:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-monitoring/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/stackstate-monitoring/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-monitoring/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-monitoring/values.yaml
    - if [ -f stable/stackstate-monitoring/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-monitoring/ci/default-values.yaml; fi
    - if [ -f stable/stackstate-monitoring/ci/default-values.yaml ]; then helm lint stable/stackstate-monitoring --values stable/stackstate-monitoring/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_stackstate-standalone:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-standalone/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/stackstate-standalone/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-standalone/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-standalone/values.yaml
    - if [ -f stable/stackstate-standalone/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-standalone/ci/default-values.yaml; fi
    - if [ -f stable/stackstate-standalone/ci/default-values.yaml ]; then helm lint stable/stackstate-standalone --values stable/stackstate-standalone/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_stackstate-values:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/stackstate-values/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/stackstate-values/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-values/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-values/values.yaml
    - if [ -f stable/stackstate-values/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/stackstate-values/ci/default-values.yaml; fi
    - if [ -f stable/stackstate-values/ci/default-values.yaml ]; then helm lint stable/stackstate-values --values stable/stackstate-values/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_suse-observability:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/suse-observability/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/suse-observability/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability/values.yaml
    - if [ -f stable/suse-observability/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability/ci/default-values.yaml; fi
    - if [ -f stable/suse-observability/ci/default-values.yaml ]; then helm lint stable/suse-observability --values stable/suse-observability/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_suse-observability-agent:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/suse-observability-agent/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/suse-observability-agent/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability-agent/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability-agent/values.yaml
    - if [ -f stable/suse-observability-agent/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability-agent/ci/default-values.yaml; fi
    - if [ -f stable/suse-observability-agent/ci/default-values.yaml ]; then helm lint stable/suse-observability-agent --values stable/suse-observability-agent/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_suse-observability-values:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/suse-observability-values/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/suse-observability-values/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability-values/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability-values/values.yaml
    - if [ -f stable/suse-observability-values/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/suse-observability-values/ci/default-values.yaml; fi
    - if [ -f stable/suse-observability-values/ci/default-values.yaml ]; then helm lint stable/suse-observability-values --values stable/suse-observability-values/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_tenant-cleanup-controller:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/tenant-cleanup-controller/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/tenant-cleanup-controller/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/tenant-cleanup-controller/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/tenant-cleanup-controller/values.yaml
    - if [ -f stable/tenant-cleanup-controller/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/tenant-cleanup-controller/ci/default-values.yaml; fi
    - if [ -f stable/tenant-cleanup-controller/ci/default-values.yaml ]; then helm lint stable/tenant-cleanup-controller --values stable/tenant-cleanup-controller/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_tenantmanagement:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/tenantmanagement/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/tenantmanagement/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/tenantmanagement/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/tenantmanagement/values.yaml
    - if [ -f stable/tenantmanagement/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/tenantmanagement/ci/default-values.yaml; fi
    - if [ -f stable/tenantmanagement/ci/default-values.yaml ]; then helm lint stable/tenantmanagement --values stable/tenantmanagement/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_tenantprovisioning:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/tenantprovisioning/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/tenantprovisioning/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/tenantprovisioning/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/tenantprovisioning/values.yaml
    - if [ -f stable/tenantprovisioning/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/tenantprovisioning/ci/default-values.yaml; fi
    - if [ -f stable/tenantprovisioning/ci/default-values.yaml ]; then helm lint stable/tenantprovisioning --values stable/tenantprovisioning/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_trafficmirror:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/trafficmirror/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/trafficmirror/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/trafficmirror/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/trafficmirror/values.yaml
    - if [ -f stable/trafficmirror/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/trafficmirror/ci/default-values.yaml; fi
    - if [ -f stable/trafficmirror/ci/default-values.yaml ]; then helm lint stable/trafficmirror --values stable/trafficmirror/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
validate_victoria-metrics-single:
  before_script:
    - .gitlab/validate_before_script.sh
  image: quay.io/helmpack/chart-testing:v3.10.1
  rules:
    - changes:
        - stable/victoria-metrics-single/**/*
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - yamale --schema /etc/ct/chart_schema.yaml stable/victoria-metrics-single/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/victoria-metrics-single/Chart.yaml
    - yamllint --config-file /etc/ct/lintconf.yaml stable/victoria-metrics-single/values.yaml
    - if [ -f stable/victoria-metrics-single/ci/default-values.yaml ]; then yamllint --config-file /etc/ct/lintconf.yaml stable/victoria-metrics-single/ci/default-values.yaml; fi
    - if [ -f stable/victoria-metrics-single/ci/default-values.yaml ]; then helm lint stable/victoria-metrics-single --values stable/victoria-metrics-single/ci/default-values.yaml; fi
    - .gitlab/validate_kubeconform.sh
  stage: validate
variables:
  HELM_VERSION: v3.1.2
  PROMOTION_DRY_RUN: "no"
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
